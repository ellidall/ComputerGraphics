import {Level} from './Level'
import {Block, BlockType} from '../Block'
import {Map} from '../Map'

class FirstLevel extends Level {
    // private readonly mapData: number[][] = [
    //     [0, 1, 0, 2, 0, 0, 1, 0, 3, 0, 0, 1, 0, 2, 0, 0, 1, 2, 0, 3, 0, 1, 0, 0, 2, 0, 1, 0, 3, 1, 2, 0],
    //     [1, 2, 0, 1, 0, 3, 0, 2, 0, 1, 0, 0, 1, 0, 3, 0, 2, 1, 0, 0, 1, 0, 2, 0, 1, 3, 0, 1, 0, 2, 3, 0],
    //     [0, 1, 3, 0, 0, 2, 0, 1, 0, 0, 1, 0, 3, 0, 2, 1, 2, 0, 1, 0, 3, 1, 0, 2, 3, 0, 1, 2, 0, 0, 2, 3],
    //     [2, 0, 0, 3, 1, 0, 2, 0, 1, 0, 3, 0, 2, 1, 0, 0, 0, 1, 3, 0, 0, 2, 0, 1, 0, 0, 1, 2, 0, 3, 1, 0],
    //     [0, 3, 0, 1, 0, 0, 2, 1, 0, 3, 1, 0, 2, 0, 1, 0, 1, 0, 2, 3, 0, 1, 0, 3, 1, 2, 0, 0, 3, 0, 1, 2],
    //     [1, 2, 0, 0, 3, 0, 1, 0, 2, 1, 0, 3, 1, 0, 0, 2, 0, 1, 0, 3, 2, 1, 0, 0, 1, 0, 2, 3, 0, 1, 0, 0],
    //     [2, 0, 1, 3, 0, 0, 1, 2, 3, 0, 1, 0, 1, 2, 0, 0, 3, 0, 2, 1, 0, 3, 1, 0, 2, 1, 0, 0, 2, 0, 3, 0],
    //     [0, 2, 1, 3, 0, 0, 1, 2, 0, 3, 1, 0, 0, 3, 2, 0, 1, 0, 2, 1, 0, 3, 0, 1, 0, 2, 0, 0, 2, 1, 3, 0],
    //     [1, 2, 0, 1, 0, 3, 0, 0, 2, 3, 1, 0, 0, 1, 2, 0, 0, 3, 2, 0, 1, 0, 2, 1, 3, 0, 1, 2, 0, 0, 1, 3],
    //     [3, 0, 1, 2, 0, 1, 3, 0, 0, 2, 1, 0, 3, 2, 0, 1, 0, 3, 0, 2, 1, 0, 2, 3, 0, 1, 0, 0, 3, 1, 2, 0],
    //     [2, 0, 1, 3, 0, 1, 0, 2, 3, 0, 2, 0, 1, 0, 0, 2, 0, 1, 2, 3, 0, 1, 0, 2, 0, 0, 1, 3, 1, 0, 3, 0],
    //     [0, 2, 0, 1, 0, 2, 3, 1, 0, 0, 1, 3, 2, 0, 1, 0, 2, 1, 0, 0, 2, 0, 1, 2, 3, 1, 0, 2, 0, 3, 1, 0],
    //     [3, 1, 0, 2, 0, 3, 1, 0, 2, 1, 0, 1, 0, 0, 2, 1, 0, 3, 2, 0, 0, 1, 0, 2, 1, 0, 3, 0, 1, 0, 0, 3],
    //     [0, 1, 2, 0, 3, 0, 1, 0, 3, 0, 2, 1, 0, 1, 2, 0, 3, 0, 0, 1, 2, 3, 0, 1, 0, 0, 2, 1, 0, 3, 2, 0],
    //     [2, 1, 0, 3, 0, 0, 1, 0, 2, 1, 3, 0, 0, 1, 2, 3, 0, 1, 0, 2, 3, 0, 1, 0, 2, 0, 1, 2, 0, 3, 0, 1],
    //     [1, 2, 0, 1, 0, 3, 0, 0, 2, 0, 3, 1, 0, 2, 3, 0, 1, 0, 3, 1, 0, 0, 2, 1, 0, 3, 0, 2, 1, 0, 0, 3],
    //     [0, 3, 1, 0, 2, 0, 1, 0, 3, 0, 2, 1, 0, 1, 0, 2, 3, 1, 0, 0, 2, 1, 3, 0, 1, 0, 3, 0, 0, 2, 3, 0],
    //     [1, 0, 2, 0, 3, 1, 0, 0, 1, 2, 3, 0, 1, 0, 2, 0, 1, 3, 0, 1, 2, 0, 1, 3, 2, 0, 0, 1, 0, 0, 2, 1],
    //     [3, 1, 0, 2, 0, 1, 3, 0, 0, 2, 1, 2, 0, 0, 1, 0, 0, 2, 0, 1, 1, 0, 2, 3, 0, 1, 2, 0, 0, 1, 2, 3],
    //     [0, 1, 3, 0, 2, 1, 0, 1, 3, 0, 1, 0, 2, 0, 0, 2, 0, 3, 1, 0, 1, 0, 0, 1, 2, 1, 0, 2, 3, 0, 1, 2],
    //     [1, 0, 1, 3, 0, 2, 0, 3, 1, 0, 0, 2, 0, 1, 3, 0, 1, 0, 0, 3, 0, 2, 1, 0, 1, 2, 3, 0, 2, 0, 3, 1]
    // ]

    private readonly mapData: number[][] = [
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],  // Стены по периметру
        [1, 0, 0, 0, 0, 0, 0, 0, 0, 1],  // Коридор
        [1, 0, 1, 1, 1, 0, 1, 0, 0, 1],  // Коридор с препятствиями
        [1, 0, 1, 0, 0, 0, 1, 0, 1, 1],  // Коридор с препятствиями
        [1, 0, 0, 0, 1, 0, 1, 1, 1, 1],  // Коридор
        [1, 0, 1, 0, 1, 0, 1, 0, 0, 1],  // Коридор с препятствиями
        [1, 0, 0, 0, 1, 0, 1, 1, 1, 1],  // Коридор
        [1, 0, 1, 1, 1, 1, 1, 0, 0, 1],  // Коридор с препятствиями
        [1, 0, 0, 0, 0, 0, 0, 0, 0, 1],  // Коридор
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],  // Стены по периметру
    ];


    createMap(): Map {
        const mapData: BlockType[][] = []

        for (let z = 0; z < this.mapData.length; z++) {
            mapData[z] = []
            for (let x = 0; x < this.mapData[z]!.length; x++) {
                mapData[z]![x] = Block.convertToBlockType(this.mapData[z]![x]!)
            }
        }

        return new Map(mapData)
    }
}

export {
    FirstLevel,
}
